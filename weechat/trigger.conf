#
# weechat -- trigger.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use commands like /set or /fset to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart/
#

[look]
enabled = on
monitor_strip_colors = off

[color]
flag_command = lightgreen
flag_conditions = yellow
flag_post_action = lightblue
flag_regex = lightcyan
flag_return_code = lightmagenta
identifier = cyan
regex = white
replace = cyan
trigger = green
trigger_disabled = red

[trigger]
beep.arguments = ""
beep.command = "/print -beep"
beep.conditions = "${tg_displayed} && (${tg_highlight} || ${tg_msg_pv})"
beep.enabled = on
beep.hook = print
beep.post_action = none
beep.regex = ""
beep.return_code = ok
buflist_fold_symbol_click.arguments = "1001|buflist_mouse"
buflist_fold_symbol_click.command = "/toggle_bufautoset localvar_set_fold ${full_name}"
buflist_fold_symbol_click.conditions = "${localvar_type} == server && ${plugins.var.buflist_subsection_fold} != && (${plugins.var.buflist_subsection_buffer_number} != && ${_bar_item_col} == ${lengthscr:${buffer[last_gui_buffer].number}.} || ${plugins.var.buflist_subsection_buffer_number} == && ${_bar_item_col} == 0)"
buflist_fold_symbol_click.enabled = on
buflist_fold_symbol_click.hook = hsignal
buflist_fold_symbol_click.post_action = none
buflist_fold_symbol_click.regex = ""
buflist_fold_symbol_click.return_code = ok_eat
buflist_refresh_options.arguments = "weechat.bar.buflist.size*;plugins.var.buflist_*"
buflist_refresh_options.command = "/buflist refresh"
buflist_refresh_options.conditions = ""
buflist_refresh_options.enabled = on
buflist_refresh_options.hook = config
buflist_refresh_options.post_action = none
buflist_refresh_options.regex = ""
buflist_refresh_options.return_code = ok
buflist_resize.arguments = "buflist_resize"
buflist_resize.command = "/mute /set plugins.var.buflist_section_${my_section} ${calc:${plugins.var.buflist_section_${my_section}} ${if:${_key}=~up$?-:+} 1};/bar set ${_bar_name} size ${calc:${weechat.bar.${_bar_name}.size} ${if:${_key}=~up$?-:+} 1}"
buflist_resize.conditions = "${_key}=~down || ${_key}=~up && (${_bar_item_col} < ${plugins.var.buflist_section_1st} && ${plugins.var.buflist_section_1st} > 1 || ${_bar_item_col} >= ${plugins.var.buflist_section_1st} && ${plugins.var.buflist_section_2nd} > 1)"
buflist_resize.enabled = on
buflist_resize.hook = hsignal
buflist_resize.post_action = none
buflist_resize.regex = "/.*/${if:${_bar_item_col}<${plugins.var.buflist_section_1st}?1st:2nd}/my_section"
buflist_resize.return_code = ok
cmd_pass.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass.command = ""
cmd_pass.conditions = ""
cmd_pass.enabled = on
cmd_pass.hook = modifier
cmd_pass.post_action = none
cmd_pass.regex = "==^((/(msg|m|quote) +nickserv +(id|identify|register|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+) +)|/oper +[^ ]+ +|/quote +pass +|/set +[^ ]*password[^ ]* +|/secure +(passphrase|decrypt|set +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
cmd_pass.return_code = ok
control_buffers_change_control_window.arguments = "plugins.var.control_buffers_window"
control_buffers_change_control_window.command = "/window refresh"
control_buffers_change_control_window.conditions = ""
control_buffers_change_control_window.enabled = on
control_buffers_change_control_window.hook = config
control_buffers_change_control_window.post_action = none
control_buffers_change_control_window.regex = ""
control_buffers_change_control_window.return_code = ok
msg_auth.arguments = "5000|irc_message_auth"
msg_auth.command = ""
msg_auth.conditions = ""
msg_auth.enabled = on
msg_auth.hook = modifier
msg_auth.post_action = none
msg_auth.regex = "==^(.*(id|identify|register|ghost +[^ ]+|release +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
msg_auth.return_code = ok
server_pass.arguments = "5000|input_text_display;5000|history_add"
server_pass.command = ""
server_pass.conditions = ""
server_pass.enabled = on
server_pass.hook = modifier
server_pass.post_action = none
server_pass.regex = "==^(/(server|connect) .*-(sasl_)?password=)([^ ]+)(.*)==${re:1}${hide:*,${re:4}}${re:5}"
server_pass.return_code = ok
slack_matrix_server_search.arguments = "slack_matrix_server_search"
slack_matrix_server_search.command = ""
slack_matrix_server_search.conditions = "${info:python_version} != && ${tg_arguments} != && ${buffer[${tg_arguments}].local_variables.script_name} =~ ^(slack|matrix)$"
slack_matrix_server_search.enabled = on
slack_matrix_server_search.hook = info
slack_matrix_server_search.post_action = none
slack_matrix_server_search.regex = "/.*/${buffer[${tg_arguments}].local_variables.script_name}/my_script /.*/${buffer[${tg_arguments}].local_variables.plugin}/my_plugin /.*/${buffer[${tg_arguments}].local_variables.server}/my_server /.*/${my_plugin}.${if:${my_script}==matrix?server.}${my_server}/my_server_full_name ==\x5c\x5c==\x5c\x5c==my_server_full_name =='==\'==my_server_full_name /.*/${info:python_eval,print(weechat.buffer_search('==', '${my_server_full_name}'))}/tg_info"
slack_matrix_server_search.return_code = ok
toggle_bufautoset.arguments = "toggle_bufautoset;toggle bufautoset options;<buffer_property> <buffer_fullname>;buffer_property: name of the property${\n}buffer_fullname: name of the buffer${\n}${\n}The buffer_autoset.py script has no toggle mechanism so this command bring this functionality. Also, the script does not reset a property or localvar after deleting them. For example, if you type /buffer_autoset add irc.freenode.#weechat localvar_set_something 1, and then, /buffer_autoset del irc.freenode.#weechat.localvar_set_something, the localvar will still appears in /buffer localvar until you close and reoppen the buffer. This command will remove the localvar and hidden property upon deletion. You should use this command only for properties that take 0 or 1 as value or localvar that take 0 or 1.;;"
toggle_bufautoset.command = "/mute /buffer_autoset ${if:${buffer_autoset.buffer.${my_full_name}.${my_property}}?del ${my_full_name}.${my_property}:add ${my_full_name} ${my_property} 1};/command -buffer ${my_full_name} * /buffer set ${my_property} ${if:${buffer_autoset.buffer.${my_full_name}.${my_property}}?1:0}"
toggle_bufautoset.conditions = "${tg_argv2} !="
toggle_bufautoset.enabled = on
toggle_bufautoset.hook = command
toggle_bufautoset.post_action = none
toggle_bufautoset.regex = "/.*/${tg_argv1}/my_property /.*/${tg_argv2}/my_full_name"
toggle_bufautoset.return_code = ok
toggle_property.arguments = "toggle_property"
toggle_property.command = "/toggle_bufautoset ${my_property} ${my_full_name}"
toggle_property.conditions = ""
toggle_property.enabled = on
toggle_property.hook = hsignal
toggle_property.post_action = none
toggle_property.regex = "/.*/${if:${_chat}?${_buffer_full_name}:${full_name}}/my_full_name /.*/${buffer[${pointer}].local_variables.script_name}/script_name /.*/${if:${_key}==f?${plugin}.${if:${plugin}==irc||${script_name}==matrix?server.}${localvar_server}:${re:0}}/my_full_name /.*/${_key}/my_property /^button1.*/localvar_set_control_buffer/my_property /(?-i)^c$/localvar_set_control_buffer/my_property /(?-i)^C$/localvar_set_no_chanmon_like/my_property /(?-i)^f$/localvar_set_fold/my_property /(?-i)^h$/hidden/my_property"
toggle_property.return_code = ok
