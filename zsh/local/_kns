#! /bin/zsh

declare -a _kns_namespaces=()

_kns () {
  local -a kns_commands
  local -a kns_context=( $(kns ls) )
  for cmd in ${(k)_kns_cmd[@]} ; do
    kns_commands=( "${kns_commands[@]}" "${cmd}:${_kns_cmd[${cmd}]}" )
  done

  typeset -A opt_args
  local state

  _arguments \
    "1: :{_describe 'command' kns_commands}" \
    '*:: :->args'

  case ${words[1]} in
    activate | rm)
      if [[ -n "${words[2]}" ]] &&
         [[ "${kns_context[(r)${words[2]}]}" == "${words[2]}" ]]; then

        if [[ "$KNS_CONTEXT" != "${words[2]}" ]]; then
          KNS_CONTEXT="${words[2]}"

          echo -n "Retrieving namespaces..."
          _kns_namespaces=(
            $(kubectl get namespaces \
                -o go-template \
                --template '{{range .items}}{{.metadata.name}} {{end}}')
          )
        fi
        _arguments "2: :{_describe 'kns' _kns_namespaces}"
      else
        _arguments "1: :{_describe 'kns' kns_context}"
      fi
      ;;
    new)
      if typeset -fz _kns ; then
        _arguments \
          '1:kns name:' \
          '*:kns args:_kns'
      else
        _arguments \
          '1:kns name:' \
          '*:kns args:'
      fi
      ;;
  esac
}

compdef _kns kns
